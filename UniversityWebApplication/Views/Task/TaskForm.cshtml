@model UniversityWebApplication.Models.TaskForm

@{
    ViewBag.Title = Model.Title;
    Layout = "_Layout";
}

<h1>@Model.Title</h1>

<hr class="basic" />

<form asp-controller="Task" asp-action="Save">
    <div asp-validation-summary="ModelOnly" class="text-basic"></div>

    <div class="form-group row">

        <div class="col-4">
            <label asp-for="Task.Name"></label>:*
        </div>

        <div class="col-8">
            <input type="text" asp-for="Task.Name" class="form-control" />
            <span asp-validation-for="Task.Name" class="text-basic"></span>
        </div>
    </div>

    <div class="form-group row">

        <div class="col-4">
            <label asp-for="Task.Description"></label>:*
        </div>

        <div class="col-8">
            <textarea asp-for="Task.Description" class="form-control" rows="10"></textarea>
            <span asp-validation-for="Task.Description" class="text-basic"></span>
        </div>
    </div>

    <div class="form-group row">

        <div class="col-4">
            <label asp-for="Task.VolunteerNumber"></label>:*
        </div>

        <div class="col-8">
            <input type="text" asp-for="Task.VolunteerNumber" class="form-control" />
            <span asp-validation-for="Task.VolunteerNumber" class="text-basic"></span>
        </div>
    </div>

    <div class="form-group row">

        <div class="col-4">
            <label asp-for="Task.ExpectedStartDate"></label>:*
        </div>

        <div class="col-8">
            <input type="text" asp-for="Task.ExpectedStartDate" class="form-control" />
            <span asp-validation-for="Task.ExpectedStartDate" class="text-basic"></span>
        </div>
    </div>

    <div class="form-group row">

        <div class="col-4">
            <label asp-for="Task.ExpectedEndDate"></label>:*
        </div>

        <div class="col-8">
            <input type="text" asp-for="Task.ExpectedEndDate" class="form-control" />
            <span asp-validation-for="Task.ExpectedStartDate" class="text-basic"></span>
        </div>
    </div>

    <div class="form-group row">

        <div class="col-4">
            <label asp-for="Task.TasksSkills"></label>:*
        </div>

        <div class="col-8">
            <textarea asp-for="Task.TasksSkills" class="form-control" rows="10" data-role="tagsinput"></textarea>
            <span asp-validation-for="Task.TasksSkills" class="text-basic"></span>
        </div>
    </div>

    <div class="form-group row">

        <div class="col-4">
            <label asp-for="Task.StatusId"></label>:*
        </div>

        <div class="col-8">
            <select asp-for="Task.StatusId" asp-items="@(new SelectList(Model.Statuses,"Id","Name"))" class="form-control"></select>
            <span asp-validation-for="Task.StatusId" class="text-basic"></span>
        </div>
    </div>

    @Html.HiddenFor(m => m.Task.Id)
    @Html.AntiForgeryToken()

    <div class="form-group row">
        <div class="col-8 offset-4">
            <button type="submit" class="btn btn-basic">Καταχώρηση</button>
        </div>
    </div>
</form>

    <hr class="basic" />

    <a class="btn btn-basic" href="javascript:history.go(-1)" role="button">Πίσω</a>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationLayout");
            await Html.RenderPartialAsync("_DateTimePickerLayout");
            await Html.RenderPartialAsync("_TagInputLayout");

            <script>

                $(document).ready(function () {
                    var cities = new Bloodhound({
                        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('text'),
                        queryTokenizer: Bloodhound.tokenizers.whitespace,
                        prefetch: 'https://localhost:44332/cities.json'
                    });
                    cities.initialize();

                    var elt = $('#Task_TasksSkills');
                    elt.tagsinput({
                        itemValue: 'value',
                        itemText: 'text',
                        typeaheadjs: {
                            name: 'cities',
                            displayKey: 'text',
                            source: cities.ttAdapter()
                        }
                    });
                    elt.tagsinput('add', { "value": 1, "text": "Amsterdam", "continent": "Europe" });
                    elt.tagsinput('add', { "value": 4, "text": "Washington", "continent": "America" });
                    elt.tagsinput('add', { "value": 7, "text": "Sydney", "continent": "Australia" });
                    elt.tagsinput('add', { "value": 10, "text": "Beijing", "continent": "Asia" });
                    elt.tagsinput('add', { "value": 13, "text": "Cairo", "continent": "Africa" });

                    $.datetimepicker.setLocale("el");

                    $("#Task_ExpectedStartDate").datetimepicker(
                        {
                            locale: "el",
                            format: "d-m-Y"
                        });
                    $("#Task_ExpectedEndDate").datetimepicker(
                        {
                            locale: "el",
                            format: "d-m-Y"
                        });
                });
            </script>
        }
    }
