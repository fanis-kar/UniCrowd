// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.API.Data;

namespace University.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("University.API.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("University.API.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "sph",
                            Email = "sph@uniwa.gr",
                            Name = "Σχολή Δημόσιας Υγείας",
                            Phone = "+302132010115",
                            UniversityId = 1,
                            Website = "https://www.uniwa.gr/spoydes/scholes-kai-tmimata/sph/"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "sdo",
                            Email = "sdoke@uniwa.gr",
                            Name = "Σχολή Διοικητικών, Οικονομικών & Κοινωνικών Επιστημών",
                            Phone = "",
                            UniversityId = 1,
                            Website = "https://www.uniwa.gr/spoydes/scholes-kai-tmimata/sdo/"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "ffs",
                            Email = "ffs@uniwa.gr",
                            Name = "Σχολή Επιστημών Τροφίμων",
                            Phone = "2105385501",
                            UniversityId = 1,
                            Website = "https://www.uniwa.gr/spoydes/scholes-kai-tmimata/ffs/"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "seyp",
                            Email = "seyp@uniwa.gr",
                            Name = "Σχολή Επιστημών Υγείας και Πρόνοιας",
                            Phone = "2105385601",
                            UniversityId = 1,
                            Website = "https://www.uniwa.gr/spoydes/scholes-kai-tmimata/seyp/"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "aac",
                            Email = "setp@uniwa.gr",
                            Name = "Σχολή Εφαρμοσμένων Τεχνών και Πολιτισμού",
                            Phone = "2105385401",
                            UniversityId = 1,
                            Website = "https://www.uniwa.gr/spoydes/scholes-kai-tmimata/aac/"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "feng",
                            Email = "feng@uniwa.gr",
                            Name = "Σχολή Μηχανικών",
                            Phone = "+302105381212",
                            UniversityId = 1,
                            Website = "https://www.uniwa.gr/spoydes/scholes-kai-tmimata/feng/"
                        });
                });

            modelBuilder.Entity("University.API.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "uniwa",
                            AccountId = 1,
                            Address = "Αγίου Σπυρίδωνος 28, Αιγάλεω 122 43",
                            Name = "Πανεπιστήμιο δυτικής αττικής",
                            Phone = "+302105385100",
                            Website = "https://www.uniwa.gr"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "uoa",
                            AccountId = 2,
                            Address = "Πανεπιστημίου 30, Αθήνα 106 79",
                            Name = "Εθνικό και Καποδιστριακό Πανεπιστήμιο Αθηνών",
                            Phone = "+302107277000",
                            Website = "https://www.uoa.gr"
                        });
                });

            modelBuilder.Entity("University.API.Models.Department", b =>
                {
                    b.HasOne("University.API.Models.Faculty", "Faculty")
                        .WithMany("Departments")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("University.API.Models.Faculty", b =>
                {
                    b.HasOne("University.API.Models.University", "University")
                        .WithMany("Faculties")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
